apply plugin: 'com.android.library'
apply plugin: 'com.novoda.bintray-release'

android {
    compileSdkVersion rootProject.ext.compileSdkVersion
    buildToolsVersion rootProject.ext.buildToolsVersion
    defaultConfig {
        targetSdkVersion rootProject.ext.targetSdkVersion
        minSdkVersion rootProject.ext.minSdkVersion

        versionCode rootProject.ext.buildNumber
        versionName rootProject.ext.version


        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"

    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    testOptions {
        unitTests.returnDefaultValues = true
    }
}

dependencies {
    implementation fileTree(dir: "libs", include: ["*.jar"])
//    androidTestImplementation("com.android.support.test.espresso:espresso-core:${rootProject.ext.espressoVersion}", {
//        exclude group: "com.android.support", module: "support-annotations"
//    })
    compileOnly "com.google.android.things:androidthings:${rootProject.ext.thingsVersion}"
    implementation "com.android.support:support-annotations:${rootProject.ext.supportVersion}"

    testImplementation "com.google.android.things:androidthings:${rootProject.ext.thingsVersion}"
    testImplementation "junit:junit:4.12"
    testImplementation "com.android.support:support-annotations:${rootProject.ext.supportVersion}"
    testImplementation "com.android.support.test:runner:${rootProject.ext.testRunnerVersion}"
    testImplementation "com.android.support.test:rules:${rootProject.ext.testRunnerVersion}"
    testImplementation "org.mockito:mockito-core:${rootProject.ext.mockitoVersion}"
}

publish {
    groupId = "${rootProject.ext.publishedGroupId}"
    artifactId = "${rootProject.ext.artifact}"
    publishVersion = "${rootProject.ext.libraryVersion}"
    desc = "${rootProject.ext.libraryDescription}"
    licences = ['Apache-2.0']
    website = "${rootProject.ext.siteUrl}"
}
